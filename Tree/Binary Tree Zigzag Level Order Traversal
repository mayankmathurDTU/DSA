https://leetcode.com/problems/binary-tree-zigzag-level-order-traversal/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        vector<vector<int>> ans;
        if(root==NULL)return ans;
        bool flag = true;
        queue<TreeNode*> q;
        q.push(root);
        while(!q.empty()){
            int i=q.size();
            vector<int> temp(i);
            int j=0;
            while(i!=0){
                auto top = q.front(); q.pop();
                if(top->left)q.push(top->left);
                if(top->right)q.push(top->right);
                if(flag==false){
                    temp[i-1]=top->val;
                }
                else{
                    temp[j]=top->val;
                    j++;
                }
                i--;
            }
            if(flag)flag = false;
            else flag = true;
            ans.push_back(temp);
        }
        return ans;
    }
};
